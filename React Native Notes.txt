React Native Notes:
---------------------------

How to pass data from one screen to another:
On first screen from where to send data, syntax is like this:
----------------------------------------------------------------------------------
<TouchableOpacity
  onPress={() => navigation.navigate('SignUpScreen', {key: useremail})}>
  <Text style={styles.signuptext}>Sign Up</Text>
</TouchableOpacity>
----------------------------------------------------------------------------------
On the second screen where you want to receive the data, do this:
----------------------------------------------------------------------------------
function SignUpScreen({navigation, route: {params}}) {
  console.log('params -- > ', params);
  .....
}

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

How to Generate unsigned debug APK:

Bundle debug build:
----------------------------
First create "assets" folder in your react native project's "/android/app/src/main/" directory, then run the following command:

react-native bundle --dev false --platform android --entry-file index.js --bundle-output ./android/app/src/main/assets/index.android.bundle --assets-dest ./android/app/src/main/res


Then to build the unsigned APK after bundling:
-----------------------------------------------------------------
cd android
gradlew assembleDebug


Generated APK will be located at `android/app/build/outputs/apk`


----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------



How to Build Unsigned APK without the need for Metro development server:
-----------------------------------------------------------------------------------------------------------
In your app/build.gradle file you should see a large commented out block that explains which settings you can set in the project.ext.react map inside your gradle file:

The one that is interesting to us is "bundleInDebug: true"
Look for the "project.ext.react" map (should be right after the commented out block) in your gradle configuration file and add the "bundleInDebug: true" entry to the map:

If you try this out, you will notice that while your app now runs without the dev server it will still display yellowbox warning messages. This is because it is still a development build. If you want to make it a production build, which will have no warnings and will have a minified JS bundle, add the "devDisabledInDebug: true" entry to the "project.ext.react" map like this: 

project.ext.react = [
    ...
    bundleInDebug: true
    
    //ADD THIS LINE
    devDisabledInDebug: true
    ...
]


----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
